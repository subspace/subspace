searchState.loadedDescShard("sp_messenger", 0, "Primitives for Messenger.\nTrait to check if the domain is registered.\nMessenger inherent identifier.\nProvides the set code inherent data.\nInherent specific errors\nThe type of the messenger inherent data.\nApi to provide XDM extraction from Runtime Calls.\nTrait to handle XDM rewards.\nApi useful for relayers to fetch messages and submit …\nTrait that return various storage keys for storages on …\nReturns all the outbox and inbox responses to deliver. …\nReturns the storage key for confirmed domain block on …\nReturns the confirmed domain block storage for given …\nReturns the <code>data</code> of this inherent data provider.\nReturns any domain’s chains allowlist updates on …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nConstructs an inbox response message to the dst_chain as …\nReturns storage key for inbox response for a given …\nReturns the inbox responses storage key for given chain.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>Some(true)</code> if valid XDM or <code>Some(false)</code> if not …\nCreate new inherent data provider from the given <code>data</code>.\nConstructs an outbox message to the dst_chain as an …\nReturns the outbox storage key for given chain.\nReturns storage key for outbox for a given message_id.\nReturns true if the inbox message response is ready to be …\nReturns true if the outbox message is ready to be relayed …\nEndpoint as defined in the formal spec. Endpoint is an …\nHandler to\nRepresents a particular endpoint in a given Execution …\nEndpoint request or response payload.\nRequest sent by src_endpoint to dst_endpoint.\nResponse for the message request.\nContains the error value\nId of the endpoint on a specific chain.\nUnique Id of the message between dst_chain and src_chain.\nContains the success value\nSender provides abstraction on sending messages to other …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTriggered by pallet-messenger when a new inbox message is …\nTriggered by pallet-messenger when a response for a …\nReturn the maximal possible consume weight of …\nReturn the maximal possible consume weight of <code>message</code>\nSends a message to dst_chain_id.\nMessage with storage key to generate storage proof using …\nSet of messages with storage keys to be relayed in a given …\nIdentifier of a chain.\nRequest to close an open channel with foreign chain.\nChannel identity.\nRequest to open a channel with foreign chain.\nChannel open parameters\nCross Domain message contains Message and its proof on …\nEndpoint message.\nContains the error value\nFee model to send a request and receive a response from …\nMessage contains information to be sent to or received …\nUnique Id of a message between two chains.\nUnique message key for Outbox and Inbox responses\nMessage weight tag used to indicate the consumed weight …\nNonce used as an identifier and ordering of messages …\nContains the success value\nPayload of the message\nProtocol message.\nDefines protocol requests performed on chains.\nDefines protocol requests performed on chains.\nProtocol message that encompasses  request or its response.\nVersioned message payload\nChannelId the message was sent through.\nChannelId the message was sent through.\nChannelId the message was sent through.\nChain this message is intended for.\nChain this message is intended for.\nChain this message is intended for.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLast delivered message response nonce on src_chain.\nMessage nonce within the channel.\nMessage nonce within the channel.\nMessage nonce within the channel.\nPayload of the message\nProof of message processed on src_chain.\nFee to relay message from one chain to another\nChain which initiated this message.\nChain which initiated this message.\nChain which initiated this message.\nStorage key to generate proof for using proof backend.\nThe message weight tag\nThe message weight tag\nConsensus chain MMR leaf proof.\nConsensus chain MMR leaf proof.\nStorage proof that src domain chain’s block is out of …\nStorage proof that message is processed on src_chain.\nStorage proof that message is processed on src_chain.")