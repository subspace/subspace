searchState.loadedDescShard("domain_test_service", 0, "Crate used for testing with Domain.\nThe domain id of the genesis domain\nSet of test accounts.\nChain specification for the domain test runtime.\nConstruct an extrinsic that can be applied to the test …\nConstruct a generic extrinsic signed by custom key\nConstruct an unsigned extrinsic that can be applied to the …\nUtilities used for testing with the domain.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns an iterator over all test accounts.\nSet of test accounts.\nCreate a domain node <code>Configuration</code>.\nCreate a crypto <code>Pair</code> from a numeric value.\nGet account id of a <code>numeric</code> account.\nCreate chain spec\nThe backend type used by the test service.\nA generic domain node instance used for testing.\nA builder to create a <code>DomainNode</code>.\nDomain executor for the test service.\nThe evm domain client\nThe evm domain node\nTrait for convert keyring to account id\nGet the nonce of the node account\nThe <code>MultiaddrWithPeerId</code> to this node. This is useful if …\nThe <code>MultiaddrWithPeerId</code> to this node. This is useful if …\nClient backend.\nClient backend.\nBuild a evm domain node\nClient’s instance.\nClient’s instance.\nCode executor.\nCode executor.\nMake the node connect to the given domain node.\nConstruct an extrinsic with the current nonce of the node …\nConstruct an extrinsic with the given nonce and tip for …\nConstruct an extrinsic.\nConstruct an extrinsic with the given transaction tip.\nThe domain id\nThe domain id\nInstruct the node to exclusively connect to registered …\nGet the free balance of the given account\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert keyring to account id\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the open XDM channel for given chain\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe node’s account key\nThe node’s account key\nNetwork service.\nNetwork service.\nCreate a new instance of <code>Self</code>.\nDomain oeprator.\nDomain oeprator.\nRPCHandlers to make RPC queries.\nRPCHandlers to make RPC queries.\nSend an extrinsic to this node.\nSends an system.remark extrinsic to the pool.\nSkip empty bundle production when there is no non-empty …\nSync service.\nSync service.\nTaskManager’s instance.\nTaskManager’s instance.\nSink to the node’s tx pool\nSink to the node’s tx pool\nWait for <code>count</code> blocks to be imported in the node and then …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturn key pair.\nReturn public key.\nSign <code>msg</code>.\nReturn account id\nReturn seed string.")