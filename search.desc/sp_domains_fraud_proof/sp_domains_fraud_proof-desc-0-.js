searchState.loadedDescShard("sp_domains_fraud_proof", 0, "Subspace fraud proof primitives for consensus chain.\nBlock randomness at a given consensus block hash.\nBlock randomness fetched from consensus state at a …\nRequest to check extrinsics in single context\nResult of check extrinsics in single context\nDomain <code>set_consensus_chain_byte_fee</code> extrinsic using the …\nEncoded domain <code>set_consensus_chain_byte_fee</code> extrinsic …\nThe body of domain bundle included in a given consensus …\nDomain block body fetch from a specific consensus block …\nType that maybe holds an encoded update domain chain …\nEncoded domain update_chain_allowlist extrinsic if there …\nDomains <code>update_domain_chain_allowlist</code> extrinsic at a given …\nRequest to get Domain election params.\nDomain’s total stake at a given Consensus hash.\nThe domain runtime code\nThe domain runtime code\nDomain set_code extrinsic if there is a runtime upgrade at …\nEncoded domain set_code extrinsic if there is a runtime …\nDomain timestamp extrinsic using the timestamp at a given …\nEncoded domain timestamp extrinsic using the timestamp …\nHolds an encoded set_code extrinsic with an upgraded …\nHolds an encoded extrinsic with updates.\nRequest to check if the domain extrinsic is decodable or …\nIf the domain extrinsic is decodable or not.\nAPI necessary for fraud proof.\nDomains fraud proof host function\nTrait to query and verify Domains Fraud proof.\nTrait Impl to query and verify Domains Fraud proof.\nRequest type to fetch required verification information …\nResponse holds required verification information for fraud …\nProvides implementations for the extern host functions.\nRequest to check if particular extrinsic is an inherent …\nIf the particular extrinsic provided is either inherent or …\nCustom invalid validity code for the extrinsics in …\nNo runtime upgrade.\nNo updates\nRequest to get Operator stake.\nOperators Stake at a given Consensus hash.\nType that maybe holds an encoded set_code extrinsic with …\nRequest to fetch a specific storage key\nResult of the storage key request\nType that specifies the request of storage keys\nDomain’s transfers storage key\nRequest to check if particular extrinsic is in range for …\nIf particular extrinsic is in range for (domain, bundle) …\nRequest to check if the XDM is valid\nIf the particular xdm extrinsic is valid or not. Returns …\nDerive the bundle digest for the given bundle body.\nDerive the bundle digest for the given bundle body.\nCheck the execution proof\nThis module provides the feature of generating and …\nDomain fraud proof related runtime interface\nReture the storage key used in fraud proof\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the required verification info for the runtime to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new instance of <code>FraudProofExtension</code>.\nSubmit the fraud proof via an unsigned extrinsic.\nIndex of the bundle in which the extrinsic exists\nDomain block hash from ER\nDomain block number from ER\nDomain block state root from ER\nExtrinsics which we want to check in single context\nExtrinsic for which we need to check the range\nExtrinsic for which we need to if it is inherent or not.\nExtrinsic for which we need to if it is decodable or not.\nEncoded XDM extrinsic that needs to be validated.\nStorage proof for the keys used in validating the extrinsic\nCreates storage proof for verifying an execution without …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nConstructs a new instance of <code>ExecutionProver</code>.\nReturns a storage proof which can be used to reconstruct a …\nExecutes some extrinsic.\nMismatch type possible for ApplyExtrinsic execution phase\nFailed to pass the execution proof check.\nBundle with requested index not found in execution receipt\nA phase of a block’s execution, carrying necessary …\nExtrinsic with requested index not found in bundle\nFailed to check extrinsics in single context\nFailed to derive bundle digest\nFailed to derive domain inherent extrinsic\nFailed to get bundle weight\nFailed to get domain runtime call response\nFailed to derive domain storage key\nExecutes the <code>finalize_block</code> hook.\nMismatch type possible for FinalizBlock execution phase\nFailed to decode the header produced by <code>finalize_block</code>.\nExecutes the <code>initialize_block</code> hook.\nFailed to decode the return value of <code>initialize_block</code> and …\nRepresents an invalid block fees proof.\nInvalid bundle digest\nRepresents an invalid domain block hash fraud proof.\nThe fraud proof prove nothing invalid\nProves an invalid state transition by challenging the …\nRepresents an invalid transfers proof.\nFailed to decode the storage root produced by verifying …\nThe target valid bundle not found from the target bad …\nUnexpected invalid bundle proof data\nInvalid bundle entry in bad receipt was expected to be …\nRepresents a valid bundle index and all the extrinsics …\nFraud proof for the valid bundles in …\nError type of fraud proof verification on consensus node.\nHash of the bad receipt this fraud proof targeted\nBlock randomness storage proof\n<code>Vec&lt;(tx_signer, tx_hash)&gt;</code> of all extrinsics\nIndex of this bundle in the original list of bundles in …\nThe targetted bundle with proof\nReturns the post state root for the given execution result.\nDigests storage proof that is used to derive Domain block …\nThe storage proof used during verification\nReturns the method for generating the proof.\nExecution phase.\nProof recorded during the computation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if execution phase refers to mismatch between …\nThe domain runtime code storage proof\nThe MMR proof for the consensus state root that used to …\nThe specific fraud proof variant\nProof data of the invalid bundle\nStorage witness needed for verifying this proof.\nStorage witness needed for verifying this proof.\nValid Bundle digests\nProvides implementations for the extern host functions.\nDerive the bundle digest for the given bundle body.\nCheck the execution proof with also included domain block …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns required fraud proof verification information to …\nCalls <code>U::from(self)</code>.\nTrait to get storage keys in the runtime i.e. when …\nTrait to get storage keys in the client i.e. when …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGenerate the <code>MaybeDomainRuntimeUpgradedProof</code>, it is the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nVerify if the <code>bundle</code> does commit to the given <code>state_root</code>\nVerifies invalid block fees fraud proof.\nVerifies invalid domain block hash fraud proof.\nVerifies invalid domain extrinsic root fraud proof.\nVerifies invalid state transition fraud proof.\nVerifies invalid transfers fraud proof.\nVerifies valid bundle fraud proof.")